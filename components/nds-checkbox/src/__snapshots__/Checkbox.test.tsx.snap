// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox should match snapshot with hint text supplied 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="checkbox"
        data-component="checkbox"
      >
        <div>
          <input
            class="checkbox__input"
            id="contact-preference_email"
            name="contact-preference"
            type="checkbox"
            value="email"
          />
          <label
            class="checkbox__label"
            for="contact-preference_email"
          >
            Email
          </label>
          <span
            class="checkbox__hint"
          >
            This is a hint to appear.
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="checkbox"
      data-component="checkbox"
    >
      <div>
        <input
          class="checkbox__input"
          id="contact-preference_email"
          name="contact-preference"
          type="checkbox"
          value="email"
        />
        <label
          class="checkbox__label"
          for="contact-preference_email"
        >
          Email
        </label>
        <span
          class="checkbox__hint"
        >
          This is a hint to appear.
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox should match snapshot with some default attributes 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="checkbox"
        data-component="checkbox"
      >
        <div>
          <input
            class="checkbox__input"
            id="contact-preference_email"
            name="contact-preference"
            type="checkbox"
            value="email"
          />
          <label
            class="checkbox__label"
            for="contact-preference_email"
          >
            Email
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="checkbox"
      data-component="checkbox"
    >
      <div>
        <input
          class="checkbox__input"
          id="contact-preference_email"
          name="contact-preference"
          type="checkbox"
          value="email"
        />
        <label
          class="checkbox__label"
          for="contact-preference_email"
        >
          Email
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
