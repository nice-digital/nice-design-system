////
/// @group spacing
////

// Spacing classes were inspired by https://v4-alpha.getbootstrap.com/utilities/spacing/

// Spacing classes take the form:
//  - {property}{sides}--{size} for xs, or
//  - {property}{sides}--{size}-{breakpoint} upwards
//
// Where {property} is one of:
//  - m - for classes that set margin
//  - p - for classes that set padding
// And {sides} is one of:
//  - t - for classes that set *-top
//  - b - for classes that set *-bottom
//  - l - for classes that set *-left
//  - r - for classes that set *-right
//  - h - for classes that set both *-left and *-right
//  - v - for classes that set both *-top and *-bottom
// And {size} is on a scale from 'a' (small) via 'd' (default/medium) to 'g' (large) so is one of:
//  - 0 - for classes that eliminate the margin or padding by setting it to 0
//  - a - for extra extra small margin/padding
//  - b - for extra small margin/padding
//  - c - for small margin/padding
//  - d - for default (medium) margin/padding
//  - e - for large margin/padding
//  - f - for extra large margin/padding
//  - g - for extra extra large margin/padding
//  And {breakpoint} is optional and one of:
//  - xs
//  - sm
//  - md
//  - lg
//  - xl
//
// For example:
//  - `pb--d-lg` - default padding bottom from large breakpoint upwards
//  - `mv--f` - extra large vertical (top and bottom) margin
//  - `mt--c` - small margin top
//  - `pl--c-md` - small padding left from medium breakpoints upwards.

/// Set to `false` to not output all the spacing modifier classes
/// @since 1.0.0
$nds-include-spacing-modifiers: true !default;

// A map of spacing value
$_spacings: (
  0: 0,
  a: $nds-spacing-xx-small,
  b: $nds-spacing-x-small,
  c: $nds-spacing-small,
  d: $nds-spacing-medium,
  e: $nds-spacing-large,
  f: $nds-spacing-x-large,
  g: $nds-spacing-xx-large
);

// Map of property abbreviations to name
$_properties: (
  m: margin,
  p: padding
);

// Map of side abbreviations to name
$_sides: (
  t: top,
  r: right,
  b: bottom,
  l: left,
  h: (
    left,
    right
  ),
  v: (
    bottom,
    top
  )
);

@mixin _prop($prop-name, $length, $side: '') {
  $side: if($side == '', '', '-#{$side}');
  $prop: '#{$prop-name}#{$side}';
  #{$prop}: rem($length) !important;
}

@mixin _side($prop-abbrev, $prop-name, $breakpoint, $size, $length) {
  @each $side-key, $side-name in $_sides {
    .#{$prop-abbrev}#{$side-key}--#{$size}#{$breakpoint} {
      @if is-list($side-name) {
        @each $s in $side-name {
          @include _prop($prop-name, $length, $s);
        }
      } @else {
        @include _prop($prop-name, $length, $side-name);
      }
    }
  }
}

@mixin _spacings($prop-abbrev, $prop-name, $breakpoint) {
  @each $size, $length in $_spacings {
    @include _side($prop-abbrev, $prop-name, $breakpoint, $size, $length);
  }
}

@mixin _properties($breakpoint: '') {
  @each $prop-abbrev, $prop-name in $_properties {
    @include _spacings($prop-abbrev, $prop-name, $breakpoint);
  }
}

@if $nds-include-spacing-modifiers {
  @include _properties;

  @each $breakpoint-name, $breakpoint-value in $mq-breakpoints {
    @include mq($from: $breakpoint-name) {
      @include _properties('-#{$breakpoint-name}');
    }
  }
}
