////
/// @group components
////

@use '@nice-digital/nds-core/scss/colours';
@use '@nice-digital/nds-core/scss/focus';
@use '@nice-digital/nds-core/scss/spacing';
@use '@nice-digital/nds-core/scss/utils';

// Checkbox/radio button option (label)
.filter-option {
  background: colours.$filter-option-background;
  border-top: 1px solid colours.$filter-option-border;
  color: colours.$text;
  cursor: pointer;
  display: block;
  line-height: 1.2;
  padding: utils.rem(
    spacing.$small spacing.$small spacing.$small spacing.$large
  );
  position: relative;
  text-decoration: none;

  // An option can be an anchor or a label
  &:hover,
  &:focus {
    color: colours.$text;
  }

  &:hover {
    background: colours.$filter-option-hover;
  }

  input {
    float: left;
    height: utils.rem(spacing.$medium);
    margin-left: utils.rem(-(spacing.$medium + spacing.$small));
    margin-top: utils.rem(spacing.$xx-small);
    width: utils.rem(spacing.$medium);

    &:focus {
      @include focus.default-focus-style;
      z-index: 1;
    }
  }

  &__text {
    &:before {
      background: colours.$filter-option-text-before-background;
      border: 1px solid colours.$filter-option-text-before-border;
      box-sizing: border-box;
      content: '';
      cursor: pointer;
      height: utils.rem(spacing.$medium);
      left: utils.rem(spacing.$small);
      margin-top: utils.rem(spacing.$xx-small);
      pointer-events: none;
      position: absolute;
      top: utils.rem(spacing.$small);
      width: utils.rem(spacing.$medium);
    }

    &:after {
      background: transparent;
      border: solid;
      border-top-color: transparent;
      border-width: utils.rem(0 0 spacing.$xx-small spacing.$xx-small);
      content: '';
      cursor: pointer;
      height: 0.4rem;
      left: 0.7rem;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 0.85rem;
      transform: rotate(-45deg);
      width: 0.7rem;
    }
  }

  input:focus ~ &__text {
    &:before {
      @include focus.default-focus-style;
    }
  }

  input:checked ~ &__text {
    &:after {
      opacity: 1;
    }
  }

  @include utils.when-is(a) {
    &:focus {
      z-index: 1;
    }

    &:visited,
    &:active {
      color: colours.$text;
    }
  }
}
