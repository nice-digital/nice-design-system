////
/// @group grid
////

$human-grid-names: (
  whole: 1,
  half: 2,
  third: 3,
  quarter: 4,
  fifth: 5
);

$human-number-names: (one, two, three, four);

@mixin nds-human-grid-names($prefix) {
  [data-g~='#{ $prefix }one-whole'] {
    width: 100%;
  }

  // Generate selectors for human grid width names like one-quarter, two-thirds etc
  @each $fraction-name, $fraction-value in $human-grid-names {
    @for $index from 1 through max($fraction-value - 1, 1) {
      @if $index != $fraction-value {
        $human-number: nth($human-number-names, $index); // E.g. two
        $plural: if(
          $index > 1,
          's',
          ''
        ); // Pluralize if necessary e.g. quarters

        $fraction: '#{ $human-number }-#{ $fraction-name }#{ $plural }';

        [data-g~='#{ $prefix }#{ $fraction }'] {
          width: percentage($index / $fraction-value);
        }

        // PUSH
        [data-g~='#{ $prefix }push:#{ $fraction }'] {
          left: percentage($index / $fraction-value);
        }

        // PULL
        [data-g~='#{ $prefix }pull:#{ $fraction }'] {
          left: percentage($index / $fraction-value);
        }
      }
    }
  }
}

@mixin nds-generate-grid-classes($breakpoint: null) {
  $prefix: if($breakpoint, $breakpoint + ':', '');

  // Width classes
  @for $index from 1 through 12 {
    [data-g~='#{ $prefix }#{ $index }'] {
      width: percentage($index / 12);
    }
  }

  // Push/ pull classes
  @for $index from 0 through 12 {
    [data-g~='#{ $prefix }push:#{ $index }'] {
      left: percentage($index / 12);
    }

    [data-g~='#{ $prefix }pull:#{ $index }'] {
      right: percentage($index / 12);
    }
  }

  // Human class names like  one-whole
  @include nds-human-grid-names($prefix);
}
