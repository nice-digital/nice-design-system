/// Modular scale values
/// @link http://www.modularscale.com/
/// @prop {Number} golden [1.618034]
/// @prop {Number} double-octave [4]
/// @prop {Number} major-twelfth [3]
/// @prop {Number} major-eleventh [2.666666667]
/// @prop {Number} major-tenth [2.5]
/// @prop {Number} octave [2]
/// @prop {Number} major-seventh [1.875]
/// @prop {Number} minor-seventh [1.777777778]
/// @prop {Number} major-sixth [1.666666667]
/// @prop {Number} minor-sixth [1.6]
/// @prop {Number} fifth [1.5]
/// @prop {Number} augmented-fourth [1.41421]
/// @prop {Number} major-third [1.25]
/// @prop {Number} minor-third [1.2]
/// @prop {Number} major-second[1.125]
/// @prop {Number} minor-second[1.066666667]
/// @since 0.1.0
$nds-scales: (
  golden: 1.618034,
  double-octave: 4 / 1,
  major-twelfth: 3 / 1,
  major-eleventh: 8 / 3,
  major-tenth: 5 / 2,
  octave: 2 / 1,
  major-seventh: 15 / 8,
  minor-seventh: 16 / 9,
  major-sixth: 5 / 3,
  minor-sixth: 8 / 5,
  fifth: 3 / 2,
  augmented-fourth: sqrt(2) / 1,
  fourth: 4 / 3,
  major-third: 5 / 4,
  minor-third: 6 / 5,
  major-second: 9 / 8,
  minor-second: 16 / 15
);

/// Gets a module scale ratio with the given name. Looks
/// inside the $nds-scales map to find a ratio.
/// @param $scale The name of the scale
/// @returns {Number} The numeric scale ratio for the given name
/// @since 0.1.0
@function nds-get-ratio($scale) {
  @if map-has-key($nds-scales, $scale) {
    @return map-get($nds-scales, $scale);
  } @else {
    @error 'Scale with name #{$scale} could not be found in the $nds-scales map';
  }
}
