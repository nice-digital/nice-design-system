/// A map of break point name to settings.
/// The break points are mobile first, min-width.
/// I.e. palm: 480px equates to (min-width: 30em)
/// Settings is a list of:
///   - width
///   - root font size
$nice-breakpoints: (
  xs: (
    root-size: 12,
    ms-ratio: get-ratio(major-second)
  ),
  sm: (
    width: 440px,
    root-size: 13,
    ms-ratio: get-ratio(major-second)
  ),
  md: (
    width: 720px,
    root-size: 14,
    ms-ratio: get-ratio(major-second)
  ),
  lg: (
    width: 960px,
    root-size: 15,
    ms-ratio: get-ratio(major-second)
  ),
  xl: (
    width: 1200px,
    root-size: 16,
    ms-ratio: get-ratio(major-second)
  )
);

// A map of breakpoints (name: px) required for SASS MQ
$mq-breakpoints: ();
@each $brkpnt-key, $brkpnt-value in $nice-breakpoints {
  @if map-has-key($brkpnt-value, width) {
    $new: ($brkpnt-key: map-get($brkpnt-value, width));
    $mq-breakpoints: map-merge($mq-breakpoints, $new);
  }
}

// Override default wizardry grids breakpoints
// $breakpoints: ();
// @each $brkpnt-key, $brkpnt-value in $nice-breakpoints {
//   @if map-has-key($brkpnt-value, width) {
//     $brkpnt-width: mq-px2em(map-get($brkpnt-value, width));

//     $breakpoints: append($breakpoints, '#{$brkpnt-key}' '(min-width: #{$brkpnt-width})');
//   }
// }

// // Override other wizardry variables
// $breakpoint-has-widths: ();
// @each $brkpnt-key, $brkpnt-value in $nice-breakpoints {
//   @if map-has-key($brkpnt-value, width) {
//     $breakpoint-has-widths: append($breakpoint-has-widths, '#{$brkpnt-key}');
//   }
// }
// $breakpoint-has-push: $breakpoint-has-widths;
// $breakpoint-has-pull: $breakpoint-has-widths;
